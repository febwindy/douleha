<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <settings>
        <setting name="cacheEnabled" value="false"/>                          <!-- 缓存全局开关 -->
        <setting name="lazyLoadingEnabled" value="true"/>                   <!-- 延迟加载的全局开关 -->
        <!--<setting name="multipleResultSetsEnabled" value="true"/>           &lt;!&ndash; 是否允许单一语句返回多结果集（需要兼容驱动） &ndash;&gt;-->
        <!--<setting name="useColumnLabel" value="true"/>                        &lt;!&ndash; 使用列标签代替列名 &ndash;&gt;-->
        <setting name="useGeneratedKeys" value="false"/>                     <!-- 允许 JDBC 支持自动生成主键，需要驱动兼容 -->
        <!--<setting name="autoMappingBehavior" value="PARTIAL"/>               &lt;!&ndash; 指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示取消自动映射；PARTIAL 只会自动映射没有定义嵌套结果集映射的结果集。 FULL 会自动映射任意复杂的结果集（无论是否嵌套） &ndash;&gt;-->
        <!--<setting name="defaultExecutorType" value="SIMPLE"/>                &lt;!&ndash; 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新 &ndash;&gt;-->
        <setting name="defaultStatementTimeout" value="25"/>              <!-- 设置超时时间，它决定驱动等待数据库响应的秒数 -->
        <!--<setting name="safeRowBoundsEnabled" value="false"/>                &lt;!&ndash; 允许在嵌套语句中使用分页（RowBounds） &ndash;&gt;-->
        <setting name="mapUnderscoreToCamelCase" value="false"/>            <!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射 -->
        <!--<setting name="localCacheScope" value="SESSION"/>                    &lt;!&ndash; MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据 &ndash;&gt;-->
        <!--<setting name="jdbcTypeForNull" value="OTHER"/>                      &lt;!&ndash; 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER &ndash;&gt;-->
        <!--<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>                &lt;!&ndash; 指定哪个对象的方法触发一次延迟加载 &ndash;&gt;-->
    </settings>
    <typeAliases>
        <typeAlias type="com.douleha.www.domain.model.role.Role" alias="Role"/>
        <typeAlias type="com.douleha.www.domain.model.user.User" alias="User"/>
        <typeAlias type="com.douleha.www.domain.model.authority.Authority" alias="Authority"/>
        <typeAlias type="com.douleha.www.domain.model.menu.Menu" alias="Menu"/>
        <typeAlias type="com.douleha.www.domain.model.menutype.MenuType" alias="MenuType"/>
    </typeAliases>
</configuration>